{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.3", "generated_at": "2025-03-14T15:53:56.173849Z", "invocation_id": "ea3049f6-3081-4684-8c56-9f73f52b18c4", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:55.993557Z", "completed_at": "2025-03-14T15:53:56.029397Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.030609Z", "completed_at": "2025-03-14T15:53:56.030626Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.043337345123291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.bitcoin_cash.STG_Table_Transactions_3M", "compiled": true, "compiled_code": "-- Model to creates the staging table\n\n-- This staging table creates a filtered view of Bitcoin Cash transactions from the last 3 months.\n\n-- Here I used the query below to maintain the nested structure of inputs and outputs for the reasons state below:\n\n-- QUERY PERFORMANCE: Unnesting large arrays in BigQuery can significantly increase query processing time and resource usage\n\n-- STORAGE EFFICIENCY: While BigQuery storage is relatively inexpensive, the unnested approach would create a very much larger table potentially more than 4x larger \n\n-- FLEXIBILITY: Also very important, the nested structure allows downstream use cases to unnest only what they need, which is more efficient than having all fields unnested regardless of usage\n\n\nselect\n    `hash`,\n    size,\n    virtual_size,\n    version,\n    lock_time,\n    block_hash,\n    block_number,\n    block_timestamp,\n    block_timestamp_month,\n    input_count,\n    output_count,\n    input_value,\n    output_value,\n    is_coinbase,\n    fee,\n    inputs,\n    outputs\n    from `bigquery-public-data`.`crypto_bitcoin_cash`.`transactions` as btc_cash\nwhere btc_cash.block_timestamp_month >= date_trunc(date_sub(current_date(), interval 10 month), month) \norder by btc_cash.block_timestamp DESC\n\n\n-- An alternative \"unnested\" approach (which I commented out below) which creates a more direct access to the nested fields but at the cost of increased storage (more than double it).\n-- This approach would unnest inputs and outputs into separate columns, which could be useful in specific scenarios such as:\n\n-- When the volume of transactions is relatively small. But with bitcoin transactions, we can have quite a lot in a short time.\n-- When the majority of downstream analytics require direct access to unnested fields. But if only one to around four/five fields are needed,then the unnested approach might not be necessary.\n-- When query performance (speed) on the unnested fields is more important than storage costs.\n\n\n-- select\n--     `hash`,\n--     size,\n--     virtual_size,\n--     version,\n--     lock_time,\n--     block_hash,\n--     block_number,\n--     block_timestamp,\n--     block_timestamp_month,\n--     input_count,\n--     output_count,\n--     input_value,\n--     output_value,\n--     is_coinbase,\n--     fee,\n--     unnested_inputs.index as input_index,\n--     unnested_inputs.spent_transaction_hash as input_spent_tx_hash,\n--     unnested_inputs.spent_output_index as input_spent_output_index,\n--     unnested_inputs.script_asm as input_script_asm,\n--     unnested_inputs.script_hex as input_script_hex,\n--     unnested_inputs.sequence as input_sequence,\n--     unnested_inputs.required_signatures as input_required_signatures,\n--     unnested_inputs.type as input_address_type,\n--     unnested_inputs.addresses as input_addresses,\n--     unnested_inputs.value as input_amount,\n--     unnested_outputs.index as output_index,\n--     unnested_outputs.script_asm as output_script_asm,\n--     unnested_outputs.script_hex as output_script_hex,\n--     unnested_outputs.required_signatures as output_required_signatures,\n--     unnested_outputs.type as output_address_type,\n--     unnested_outputs.addresses as output_addresses,\n--     unnested_outputs.value as output_amount\n--    from `bigquery-public-data`.`crypto_bitcoin_cash`.`transactions` as btc_cash\n-- left join unnest(btc_cash.inputs) as unnested_inputs\n-- left join unnest(btc_cash.outputs) as unnested_outputs\n-- where btc_cash.block_timestamp_month >= date_trunc(date_sub(current_date(), interval 10 month), month) \n-- order by btc_cash.block_timestamp DESC", "relation_name": "`astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.025021Z", "completed_at": "2025-03-14T15:53:56.032652Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.035165Z", "completed_at": "2025-03-14T15:53:56.035173Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04604697227478027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.source_not_null_bitcoin_cash_transactions_block_number.76d1ccf50c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom `bigquery-public-data`.`crypto_bitcoin_cash`.`transactions`\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.007277Z", "completed_at": "2025-03-14T15:53:56.033865Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.036782Z", "completed_at": "2025-03-14T15:53:56.036792Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04976344108581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.source_not_null_bitcoin_cash_transactions__hash_.44ed94c879", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect `hash`\nfrom `bigquery-public-data`.`crypto_bitcoin_cash`.`transactions`\nwhere `hash` is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.020581Z", "completed_at": "2025-03-14T15:53:56.034569Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.037412Z", "completed_at": "2025-03-14T15:53:56.037420Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04958295822143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.source_not_null_bitcoin_cash_transactions_block_hash.55c7ac00d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_hash\nfrom `bigquery-public-data`.`crypto_bitcoin_cash`.`transactions`\nwhere block_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.042671Z", "completed_at": "2025-03-14T15:53:56.052569Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.058794Z", "completed_at": "2025-03-14T15:53:56.058807Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03192424774169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.source_not_null_bitcoin_cash_transactions_block_timestamp.5cfcc19e26", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom `bigquery-public-data`.`crypto_bitcoin_cash`.`transactions`\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.054399Z", "completed_at": "2025-03-14T15:53:56.070143Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.072856Z", "completed_at": "2025-03-14T15:53:56.072865Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025789260864257812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.source_not_null_bitcoin_cash_transactions_block_timestamp_month.c788662b33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp_month\nfrom `bigquery-public-data`.`crypto_bitcoin_cash`.`transactions`\nwhere block_timestamp_month is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.063259Z", "completed_at": "2025-03-14T15:53:56.070929Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.073466Z", "completed_at": "2025-03-14T15:53:56.073473Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025425195693969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_STG_Table_Transactions_3M__hash_.2dfbc387fb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect `hash`\nfrom `astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`\nwhere `hash` is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.059451Z", "completed_at": "2025-03-14T15:53:56.072215Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.074672Z", "completed_at": "2025-03-14T15:53:56.074682Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03153514862060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.bitcoin_cash.DMT_Adresses_Balance", "compiled": true, "compiled_code": "-- This model calculates the \"current\" balance for addresses on the Bitcoin Cash blockchain.\n-- It is calculated from the staging table STG_Table_Transactions_3M.\n-- It excludes addresses that have participated in coinbase transactions\n\n\nWITH address_transactions AS (\n    -- Flattenning input transactions with addresses\n    -- In cryptocurrency, when coins are spent, they become \"inputs\" to a transaction\n    -- These inputs have negative values because they represent coins leaving an address\n    SELECT\n        address,\n        block_timestamp,\n        block_timestamp_month,\n        -value AS transaction_value,  -- Negative for inputs (spending)\n        is_coinbase\n    FROM `astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`,\n    UNNEST(inputs) AS input,\n    UNNEST(input.addresses) AS address\n    WHERE input.addresses IS NOT NULL\n\n    UNION ALL\n\n    -- Flattenning output transactions with addresses\n    -- In cryptocurrency, when coins are received, they become \"outputs\" to a transaction\n    -- These outputs have positive values because they represent coins entering an address\n    SELECT\n        address,\n        block_timestamp,\n        block_timestamp_month,\n        value AS transaction_value,   -- Positive for outputs (receiving)\n        is_coinbase\n    FROM `astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`,\n    UNNEST(outputs) AS output,\n    UNNEST(output.addresses) AS address\n    WHERE output.addresses IS NOT NULL\n),\n\n-- I used a CTE here to identify addresses with any coinbase transactions.\n-- Even if an address has even one coinbase transaction it be in the CTE result set.\n-- These addresses will be excluded in the main query to ensure that any address with coinbase activity is omitted from the balance calculation.\ncoinbase_addresses AS (\n    SELECT DISTINCT\n        address\n    FROM address_transactions\n    WHERE is_coinbase = TRUE\n)\n\n-- Then here, we calculate the current balance for all addresses, excluding those with coinbase transactions\nSELECT\n    address,\n    SUM(transaction_value) AS current_balance,\n    block_timestamp_month,\n    MIN(block_timestamp) AS first_activity,\n    MAX(block_timestamp) AS last_activity,\nFROM address_transactions\nWHERE address NOT IN (SELECT address FROM coinbase_addresses)\nGROUP BY address, block_timestamp_month\nORDER BY current_balance DESC", "relation_name": "`astrafy-challenge-0001`.`mart_dataset_bitcoin_cash`.`DMT_Adresses_Balance`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.077407Z", "completed_at": "2025-03-14T15:53:56.085922Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.088443Z", "completed_at": "2025-03-14T15:53:56.088452Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02330160140991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_STG_Table_Transactions_3M_block_hash.450512b76e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_hash\nfrom `astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`\nwhere block_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.090203Z", "completed_at": "2025-03-14T15:53:56.106873Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.109014Z", "completed_at": "2025-03-14T15:53:56.109025Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02652430534362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_STG_Table_Transactions_3M_block_number.0f0c15165e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom `astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.100938Z", "completed_at": "2025-03-14T15:53:56.107585Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.110216Z", "completed_at": "2025-03-14T15:53:56.110226Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02626800537109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_STG_Table_Transactions_3M_block_timestamp_month.b0f667dbfd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp_month\nfrom `astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`\nwhere block_timestamp_month is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.095783Z", "completed_at": "2025-03-14T15:53:56.109604Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.112599Z", "completed_at": "2025-03-14T15:53:56.112607Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0355684757232666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_STG_Table_Transactions_3M_block_timestamp.8f1568646a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom `astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.114283Z", "completed_at": "2025-03-14T15:53:56.124423Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.127090Z", "completed_at": "2025-03-14T15:53:56.127099Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025317668914794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.unique_STG_Table_Transactions_3M__hash_.14bbc8e360", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select `hash` as unique_field\n  from `astrafy-challenge-0001`.`staging_dataset_bitcoin`.`STG_Table_Transactions_3M`\n  where `hash` is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.128952Z", "completed_at": "2025-03-14T15:53:56.144424Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.146856Z", "completed_at": "2025-03-14T15:53:56.146868Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027318477630615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_DMT_Adresses_Balance_address.578137a75c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect address\nfrom `astrafy-challenge-0001`.`mart_dataset_bitcoin_cash`.`DMT_Adresses_Balance`\nwhere address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.135101Z", "completed_at": "2025-03-14T15:53:56.146074Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.148148Z", "completed_at": "2025-03-14T15:53:56.148155Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030828475952148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_DMT_Adresses_Balance_block_timestamp_month.224ec263bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp_month\nfrom `astrafy-challenge-0001`.`mart_dataset_bitcoin_cash`.`DMT_Adresses_Balance`\nwhere block_timestamp_month is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.140318Z", "completed_at": "2025-03-14T15:53:56.148735Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.157328Z", "completed_at": "2025-03-14T15:53:56.157338Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03146028518676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_DMT_Adresses_Balance_first_activity.3d5a24768c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_activity\nfrom `astrafy-challenge-0001`.`mart_dataset_bitcoin_cash`.`DMT_Adresses_Balance`\nwhere first_activity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.151920Z", "completed_at": "2025-03-14T15:53:56.160022Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.161422Z", "completed_at": "2025-03-14T15:53:56.161430Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01768183708190918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.not_null_DMT_Adresses_Balance_last_activity.94d8b18b76", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_activity\nfrom `astrafy-challenge-0001`.`mart_dataset_bitcoin_cash`.`DMT_Adresses_Balance`\nwhere last_activity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T15:53:56.163672Z", "completed_at": "2025-03-14T15:53:56.168244Z"}, {"name": "execute", "started_at": "2025-03-14T15:53:56.168881Z", "completed_at": "2025-03-14T15:53:56.168889Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009104013442993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.bitcoin_cash.unique_DMT_Adresses_Balance_address.8a415518ac", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select address as unique_field\n  from `astrafy-challenge-0001`.`mart_dataset_bitcoin_cash`.`DMT_Adresses_Balance`\n  where address is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.4161038398742676, "args": {"static": false, "macro_debugging": false, "strict_mode": false, "require_explicit_package_overrides_for_builtin_materializations": true, "require_batched_execution_for_custom_microbatch_strategy": false, "populate_cache": true, "log_level_file": "debug", "state_modified_compare_more_unrendered_values": false, "source_freshness_run_project_hooks": false, "favor_state": false, "use_colors_file": true, "log_level": "info", "empty_catalog": false, "select": [], "printer_width": 80, "require_yaml_configuration_for_mf_time_spines": false, "use_colors": true, "state_modified_compare_vars": false, "partial_parse_file_diff": true, "profiles_dir": "/home/runner/.dbt", "introspect": true, "log_format_file": "debug", "log_file_max_bytes": 10485760, "which": "generate", "static_parser": true, "log_format": "default", "require_nested_cumulative_type_params": false, "require_resource_names_without_spaces": false, "quiet": false, "send_anonymous_usage_stats": true, "write_json": true, "cache_selected_only": false, "vars": {}, "exclude": [], "version_check": true, "defer": false, "show_resource_report": false, "indirect_selection": "eager", "project_dir": "/home/runner/work/bitcoin_cash/bitcoin_cash", "log_path": "/home/runner/work/bitcoin_cash/bitcoin_cash/logs", "skip_nodes_if_on_run_start_fails": false, "print": true, "invocation_command": "dbt docs generate", "warn_error_options": {"include": [], "exclude": []}, "compile": true, "partial_parse": true}}